const convertToRoman = require('./convertToRoman');

describe('Roman numeral converter', () => {
  test('convertToRoman(num) must convert the given number into a roman numeral in upper-case', () => {
    expect(() => convertToRoman(-1)).toThrowError('Negative numbers not defined');
    expect(() => convertToRoman(0)).toThrowError('Zero not defined');
    expect(convertToRoman(1)).toBe('I');
    expect(convertToRoman(2)).toBe('II');
    expect(convertToRoman(3)).toBe('III');
    expect(convertToRoman(4)).toBe('IV');
    expect(convertToRoman(5)).toBe('V');
    expect(convertToRoman(6)).toBe('VI');
    expect(convertToRoman(7)).toBe('VII');
    expect(convertToRoman(8)).toBe('VIII');
    expect(convertToRoman(9)).toBe('IX');
    expect(convertToRoman(10)).toBe('X');
    expect(convertToRoman(11)).toBe('XI');
    expect(convertToRoman(12)).toBe('XII');
    expect(convertToRoman(13)).toBe('XIII');
    expect(convertToRoman(14)).toBe('XIV');
    expect(convertToRoman(15)).toBe('XV');
    expect(convertToRoman(16)).toBe('XVI');
    expect(convertToRoman(17)).toBe('XVII');
    expect(convertToRoman(18)).toBe('XVIII');
    expect(convertToRoman(19)).toBe('XIX');
    expect(convertToRoman(20)).toBe('XX');
    expect(convertToRoman(21)).toBe('XXI');
    expect(convertToRoman(22)).toBe('XXII');
    expect(convertToRoman(23)).toBe('XXIII');
    expect(convertToRoman(24)).toBe('XXIV');
    expect(convertToRoman(25)).toBe('XXV');
    expect(convertToRoman(26)).toBe('XXVI');
    expect(convertToRoman(27)).toBe('XXVII');
    expect(convertToRoman(28)).toBe('XXVIII');
    expect(convertToRoman(29)).toBe('XXIX');
    expect(convertToRoman(30)).toBe('XXX');
    expect(convertToRoman(31)).toBe('XXXI');
    expect(convertToRoman(32)).toBe('XXXII');
    expect(convertToRoman(33)).toBe('XXXIII');
    expect(convertToRoman(34)).toBe('XXXIV');
    expect(convertToRoman(35)).toBe('XXXV');
    expect(convertToRoman(36)).toBe('XXXVI');
    expect(convertToRoman(37)).toBe('XXXVII');
    expect(convertToRoman(38)).toBe('XXXVIII');
    expect(convertToRoman(39)).toBe('XXXIX');
    expect(convertToRoman(40)).toBe('XL');
    expect(convertToRoman(41)).toBe('XLI');
    expect(convertToRoman(42)).toBe('XLII');
    expect(convertToRoman(43)).toBe('XLIII');
    expect(convertToRoman(44)).toBe('XLIV');
    expect(convertToRoman(45)).toBe('XLV');
    expect(convertToRoman(46)).toBe('XLVI');
    expect(convertToRoman(49)).toBe('XLIX');
    expect(convertToRoman(50)).toBe('L');
    expect(convertToRoman(51)).toBe('LI');
    expect(convertToRoman(54)).toBe('LIV');
    expect(convertToRoman(56)).toBe('LVI');
    expect(convertToRoman(59)).toBe('LIX');
    expect(convertToRoman(60)).toBe('LX');
    expect(convertToRoman(61)).toBe('LXI');
    expect(convertToRoman(64)).toBe('LXIV');
    expect(convertToRoman(65)).toBe('LXV');
    expect(convertToRoman(80)).toBe('LXXX');
    expect(convertToRoman(90)).toBe('XC');
    expect(convertToRoman(100)).toBe('C');
    expect(convertToRoman(149)).toBe('CXLIX');
    expect(convertToRoman(199)).toBe('CXCIX');
    expect(convertToRoman(400)).toBe('CD');
    expect(convertToRoman(444)).toBe('CDXLIV');
    expect(convertToRoman(449)).toBe('CDXLIX');
    expect(convertToRoman(500)).toBe('D');
    expect(convertToRoman(501)).toBe("DI");
    expect(convertToRoman(649)).toBe("DCXLIX");
    expect(convertToRoman(798)).toBe("DCCXCVIII");
    expect(convertToRoman(891)).toBe("DCCCXCI");
    expect(convertToRoman(900)).toBe('CM');
    expect(convertToRoman(999)).toBe('CMXCIX');
    expect(convertToRoman(1000)).toBe('M');
    expect(convertToRoman(1001)).toBe('MI');
    expect(convertToRoman(1004)).toBe("MIV");
    expect(convertToRoman(1006)).toBe("MVI");
    expect(convertToRoman(1023)).toBe("MXXIII");
    expect(convertToRoman(2001)).toBe('MMI');
    expect(convertToRoman(2014)).toBe("MMXIV");
    expect(convertToRoman(2493)).toBe('MMCDXCIII');
    expect(convertToRoman(3999)).toBe('MMMCMXCIX');
  });
});
